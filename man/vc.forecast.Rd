% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tables.R
\name{vc.forecast}
\alias{vc.forecast}
\title{Get data from the 'forecast' table on VC Weather}
\usage{
vc.forecast(
  apiKey,
  locations = NULL,
  forecastDays = "5",
  aggregateHours = "24",
  alertLevel = "false",
  includeAstronomy = "false",
  unitGroup = "us",
  outputDateTimeFormat = NULL,
  shortColumnNames = "false",
  contentType = "csv",
  locationMode = "single",
  iconSet = "icons1",
  lang = "en"
)
}
\arguments{
\item{apiKey}{User-specific API Key provided by Visual Crossing Weather}

\item{locations}{One or more address, partial address or latitude, longitude values for the required locations . Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats.

When specifying a point based on longitude, latitude, the format must be specified as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).

Data for multiple locations can be requested in a single request by concatenating multiple locations using the pipe (|) character.}

\item{forecastDays}{Number of days to forecast.}

\item{aggregateHours}{The interval between weather history data in the output. 1 represent hourly records, 24 represents a daily forecast. As the source data is recorded at the hourly level, 24 hour records are aggregated to indicate the predominant weather conditions during that time period. See also ‘aggregateMinutes’. Supported values 1 or 24, default is 24.}

\item{alertLevel}{Logical. Include additional alerts if TRUE.}

\item{includeAstronomy}{Retrieve astronomical data such as moon phase, sunrise and sunset times. Set to true to enable.}

\item{unitGroup}{The system of units used for the output data. Supported values are us,uk,metric,base.}

\item{outputDateTimeFormat}{specifies the date and time format used when returning the output.}

\item{shortColumnNames}{When false, the returned dataset includes descriptive column names. When true, returns shorter, abbreviated column names with only alphanumeric characters. The short names are useful for programmatic use of the data and database data import.}

\item{contentType}{Selected between CSV or json output format. Supported values are ‘csv’ or ‘json’}

\item{locationMode}{Requests the structure that will be used for the output locations in the JSON output format. Supported values: single,array, or lookup. See the VC JSON documentation for more information on how this parameters affects the output JSON structure.}

\item{iconSet}{returns fixed set of of the icons names based on the weather conditions. Currently supported value is ‘ icons1’}

\item{lang}{Sets the language of the translatable parts of the output such as the conditions field. Available languages are en, de, fr and es. In addition passing in ‘id’ will result in the raw descriptor IDs.}
}
\value{
data.frame with output of VC Weather call
}
\description{
This function guides construction of a request to the 'forecast' table on the VC Weather API. The parameter descriptions are quoted directly from the VC weather-api documentation and should be entered as character strings.
}
\examples{
tst <- vc.forecast('PC3XUM7KALTRECYQKTNFM9CCR', locations = 'Rochester, NY', forecastDays = '5')
}
